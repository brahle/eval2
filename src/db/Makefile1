#
#
# TODO copy notice
#

SHELL = /bin/bash

# target programs (components)

SCRIPTS=../../scripts/

# folders and paths

OBJ_DIR = obj
BIN_DIR = bin

INC = ../../src gen-cpp /usr/local/include/thrift service client .
LIB = thrift pq pqxx 

VPATH = src:src/db:src/db/gen-cpp:src/queue:src/queue/gen-cpp:src/worker:src/worker/gen-cpp

TUNACC = service/*.cc
THRIFTCC = gen-cpp/*.cc

# compiler flags

CXXFLAGS = -O3 -Wall
CXXDEBFLAGS = -g -ggdb -Wall

gen_dirs : 
	mkdir -p bin
	mkdir -p obj 
	mkdir -p gen-cpp 

types : gen_dirs
	$(SCRIPTS)thrift-psql.py ../models/models.thrift sql/tables.sql gen-cpp/thrift-psql.h template/tuna.thrift thrift/tuna.thrift

backup :
	sudo -u postgres pg_dump -C deval > sql/backup/deval_backup.sql

thrift : types
	thrift --gen cpp -r thrift/tuna.thrift

gen_client : thrift
	$(SCRIPTS)client_gen.py cpp thrift/tuna.thrift
	mv tuna_client.h client/
 
skeleton : thrift 
	$(SCRIPTS)thrift-skeleton.py ../models/models.thrift template/skeleton.template gen-cpp/Tuna_server.skeleton.cpp tuna_server.cc
	rm gen-cpp/Tuna_server.skeleton.cpp
  
server : skeleton
	g++ -obin/server gen-cpp/*.cpp tuna_server.cc $(CXXFLAGS) $(addprefix -I, $(INC)) $(addprefix -l, $(LIB))

unit : gen_client skeleton
	g++ -obin/test gen-cpp/*.cpp unit_test.cc $(CXXFLAGS) $(addprefix -I, $(INC)) -lthrift 

unit_deb : gen_client skeleton
	g++ -obin/test gen-cpp/*.cpp unit_test.cc $(CXXDEBFLAGS) $(addprefix -I, $(INC)) -lthrift 

create_db : types
	cat sql/init/create_db.sql > /tmp/temp.sql
	cat sql/init/tuna.sql >> /tmp/temp.sql
	cat sql/tables.sql >> /tmp/temp.sql
	cat sql/init/refresh.sql >> /tmp/temp.sql
	sudo -u postgres psql -f /tmp/temp.sql 
	rm /tmp/temp.sql

